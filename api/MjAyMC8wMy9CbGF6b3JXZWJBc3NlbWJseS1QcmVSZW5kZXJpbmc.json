{"title":"BlazorWebAssembly-PreRendering","date":"2020-03-03T22:15:15.000Z","date_formatted":{"ll":"Mar 3, 2020","L":"03/03/2020","MM-DD":"03-03"},"link":"2020/03/BlazorWebAssembly-PreRendering","comments":true,"tags":["AspNetCore","Blazor"],"categories":["笔记"],"updated":"2020-03-14T07:47:07.486Z","content":"<h2 id=\"简介\">简介<a href=\"#简介\" title=\"简介\"></a></h2><p>这是基于微软发布最新的Blazor WebAssembly预览版<code>3.2.0-preview1.20073.1</code>。由于官方模板没有关于这个版本的预渲染模板。本着没有理由不折腾的态度，照着旧版本的代码改成了最新预览版的代码。顺便加深一下理解。官方模板地址:<a href=\"https://github.com/danroth27/BlazorWebAssemblyWithPrerendering\" target=\"_blank\">BlazorWebAssemblyWithPrerendering</a></p>\n<p>Blazor WebAssembly支持部署在静态站点服务器上也支持托管在AspNetCore App上。要使用预渲染就必须托管在AspNetCore App上。这意味着实现预渲染的Blazor WebAssembly将不能部署在静态站点上。</p>\n<h2 id=\"预渲染的实现方式概括\">预渲染的实现方式概括<a href=\"#预渲染的实现方式概括\" title=\"预渲染的实现方式概括\"></a></h2><p>预渲染的实现主要依靠<code>Html.RenderComponentAsync(...)</code>。大致流程是这样:</p>\n<pre class=\"mermaid\">sequenceDiagram\nbrowser-->>AspNetCoreApp:访问\nAspNetCoreApp-->>BlazorWebAssembly:RenderComponentAsync\nAspNetCoreApp-->>browser:下载渲染好的页面\nBlazorWebAssembly-->>browser:下载Blazor程序集信息\nbrowser-->>AspNetCoreApp:访问api\nAspNetCoreApp-->>browser:返回信息\nbrowser-->>browser:Blazor程序集渲染页面</pre>\n\n<h2 id=\"实现\">实现<a href=\"#实现\" title=\"实现\"></a></h2><p>实现Blazor你需要建立两个库：</p>\n<ul><li>AspNetCore WebApp(mvc)</li><li>Blazor WebAssembly</li></ul><p>对于webapp既可以用mvc的模板也可以用webapi的模板。反正都是要改的，关键就那么几处地方。对于Blazor WebAssembly完全可以不更改，和原来开发客户端程序一样。现在来说说webapp上要做的更改。这里是在webapi模板上做的修改。</p>\n<p>使用<code>dotnet new webapi -o BlazorServer</code>建立webapi app。完成后需要一下几步：</p>\n<ol><li>Nuget添加<code>Microsoft.AspNetCore.Blazor.Server</code>包，当然版本也是<code>3.2.0-preview1.20073.1</code>。</li><li>建立<code>_Host.cshtml</code>页(相当于静态站点的Index页)，这里将使用<code>Html.RenderComponentAsync(...)</code>完成预渲染。</li><li>修改<code>Startup.cs</code></li><li>修改<code>launchSettings.json</code>。</li></ol><p>第一步添加<code>Microsoft.AspNetCore.Blazor.Server</code>包就不说了。讲下面的</p>\n<h3 id=\"建立_hostcshtml\">建立<code>_Host.cshtml</code><a href=\"#建立_hostcshtml\" title=\"建立_Host.cshtml\"></a></h3><p>在Pages文件夹下建立<code>_Host.cshtml</code>。页面的内容可以从Blazor WebAssembly的<code>wwwroot</code>文件夹的<code>Index.html</code>拷贝。但是需要修改几个地方。</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//指定路由</span></span><br><span class=\"line\">@page <span class=\"string\">\"/\"</span></span><br><span class=\"line\">@<span class=\"keyword\">namespace</span> <span class=\"title\">BlazorClient.Pages</span></span><br><span class=\"line\">@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=<span class=\"string\">\"utf-8\"</span> /&gt;</span><br><span class=\"line\">    &lt;meta name=<span class=\"string\">\"viewport\"</span> content=<span class=\"string\">\"width=device-width\"</span> /&gt;</span><br><span class=\"line\">    &lt;title&gt;DailyWord&lt;/title&gt;</span><br><span class=\"line\">    &lt;<span class=\"keyword\">base</span> href=<span class=\"string\">\"~/\"</span> /&gt;<span class=\"comment\">//添加Blazor WebAssembly中不支持的“~”</span></span><br><span class=\"line\">    &lt;link href=<span class=\"string\">\"css/bootstrap/bootstrap.min.css\"</span> rel=<span class=\"string\">\"stylesheet\"</span> /&gt;</span><br><span class=\"line\">    &lt;link href=<span class=\"string\">\"css/site.css\"</span> rel=<span class=\"string\">\"stylesheet\"</span> /&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"><span class=\"comment\">//使用Html.RenderComponentAsync&lt;App&gt;(RenderMode.Static)渲染App组件</span></span><br><span class=\"line\">    &lt;app&gt;@(<span class=\"keyword\">await</span> Html.RenderComponentAsync&lt;App&gt;(RenderMode.Static))&lt;/app&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;div id=<span class=\"string\">\"blazor-error-ui\"</span>&gt;</span><br><span class=\"line\">        An unhandled error has occurred.</span><br><span class=\"line\">        &lt;a href=<span class=\"string\">\"\"</span> <span class=\"keyword\">class</span>=<span class=\"string\">\"reload\"</span>&gt;Reload&lt;/a&gt;</span><br><span class=\"line\">        &lt;a <span class=\"keyword\">class</span>=<span class=\"string\">\"dismiss\"</span>&gt;🗙&lt;/a&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;script src=<span class=\"string\">\"_framework/blazor.webassembly.js\"</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"修改startupcs\">修改<code>Startup.cs</code><a href=\"#修改startupcs\" title=\"修改Startup.cs\"></a></h3><p>因为是用webApi的模板建立的。并不支持页面服务。所以要有几处修改:</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ConfigureServices</span>(<span class=\"params\">IServiceCollection services</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    services.AddMvc();<span class=\"comment\">//AddControllers()；改为AddMvc();</span></span><br><span class=\"line\">    services.AddResponseCompression(opts =&gt; &#123;</span><br><span class=\"line\">    opts.MimeTypes = ResponseCompressionDefaults.MimeTypes.Concat(</span><br><span class=\"line\">        <span class=\"keyword\">new</span>[] &#123; <span class=\"string\">\"application/octet-stream\"</span> &#125;);</span><br><span class=\"line\">    &#125;);<span class=\"comment\">//一个压缩服务,不影响</span></span><br><span class=\"line\">    services.AddSingleton&lt;IWeatherForecastService, WeatherForecastService&gt;();<span class=\"comment\">//注册api接口服务</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这里要注意的是：<br><strong>如果你在客户端注入了<code>IWeatherForecastService</code>接口并使用的话，在服务端必须注册<code>IWeatherForecastService</code>。如果你在服务端不注册相同的接口,那当你浏览到调用该服务的页面，并尝试刷新的时候或直接访问有调用该服务的页面，你就会得到一个异常:找不到该服务。因为首次访问的时候服务端会预渲染这个页面，而这时候就找不到服务了，因为你没在服务端注册</strong></p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Configure</span>(<span class=\"params\">IApplicationBuilder app, IWebHostEnvironment env</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (env.IsDevelopment())</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        app.UseDeveloperExceptionPage();</span><br><span class=\"line\">        app.UseBlazorDebugging();<span class=\"comment\">//++++++++</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    app.UseHttpsRedirection();</span><br><span class=\"line\"></span><br><span class=\"line\">    app.UseClientSideBlazorFiles&lt;BlazorClient.Program&gt;();<span class=\"comment\">//+++++++</span></span><br><span class=\"line\"></span><br><span class=\"line\">    app.UseRouting();</span><br><span class=\"line\"></span><br><span class=\"line\">    app.UseAuthorization();</span><br><span class=\"line\"></span><br><span class=\"line\">    app.UseEndpoints(endpoints =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        endpoints.MapDefaultControllerRoute();<span class=\"comment\">//改成默认路由或你想要的</span></span><br><span class=\"line\">        endpoints.MapFallbackToPage(<span class=\"string\">\"/_Host\"</span>);<span class=\"comment\">//++++没有匹配到任何路由，就返回_Host页面</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"修改launchsettingsjson\">修改<code>launchSettings.json</code><a href=\"#修改launchsettingsjson\" title=\"修改launchSettings.json\"></a></h3><p>由于使用的时webapi模板,收益默认调试是，浏览器打开后会访问<code>weatherforecast</code>接口,但是我们希望看的是网页。</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"$schema\"</span>: <span class=\"string\">\"http://json.schemastore.org/launchsettings.json\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"iisSettings\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"windowsAuthentication\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"anonymousAuthentication\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"iisExpress\"</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">\"applicationUrl\"</span>: <span class=\"string\">\"http://localhost:10061\"</span>,</span><br><span class=\"line\">      <span class=\"attr\">\"sslPort\"</span>: <span class=\"number\">44327</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"profiles\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"IIS Express\"</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">\"commandName\"</span>: <span class=\"string\">\"IISExpress\"</span>,</span><br><span class=\"line\">      <span class=\"attr\">\"launchBrowser\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      <span class=\"attr\">\"launchUrl\"</span>: <span class=\"string\">\"weatherforecast\"</span>,</span><br><span class=\"line\">      <span class=\"attr\">\"environmentVariables\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"ASPNETCORE_ENVIRONMENT\"</span>: <span class=\"string\">\"Development\"</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">\"DailyWordServer\"</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">\"commandName\"</span>: <span class=\"string\">\"Project\"</span>,</span><br><span class=\"line\">      <span class=\"attr\">\"launchBrowser\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      <span class=\"attr\">\"launchUrl\"</span>: <span class=\"string\">\"\"</span>,<span class=\"comment\">//去掉“weatherforecast”值</span></span><br><span class=\"line\">      <span class=\"attr\">\"applicationUrl\"</span>: <span class=\"string\">\"https://localhost:5001;http://localhost:5000\"</span>,</span><br><span class=\"line\">      <span class=\"attr\">\"environmentVariables\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"ASPNETCORE_ENVIRONMENT\"</span>: <span class=\"string\">\"Development\"</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"总结\">总结<a href=\"#总结\" title=\"总结\"></a></h2><p>Blazor WebAssembly目前还处于预览阶段。用c#代替js写前端也成为了现实。但是目前来说，还只是适合个人玩玩,即使它发布了正式版。在目前前端js库漫天飞的情况下，完全不用js是不可能的。想通过Blazor进军前端的话还是要了解一下js,至少得会使用那些库嘛。当然Blazor也提供了c#和js的完善的互操作性。能不重复造轮子就不重复造轮子。</p>\n","prev":{"title":"UnityShader内置数学变量","link":"2020/03/UnityShader内置数学变量"},"next":{"title":"矩阵运算","link":"2020/02/矩阵运算"},"plink":"https://vrjure.github.io/2020/03/BlazorWebAssembly-PreRendering/","toc":[{"id":"简介","title":"简介","index":"1"},{"id":"预渲染的实现方式概括","title":"预渲染的实现方式概括","index":"2"},{"id":"实现","title":"实现","index":"3","children":[{"id":"建立_hostcshtml","title":"建立_Host.cshtml","index":"3.1"},{"id":"修改startupcs","title":"修改Startup.cs","index":"3.2"},{"id":"修改launchsettingsjson","title":"修改launchSettings.json","index":"3.3"}]},{"id":"总结","title":"总结","index":"4"}],"reward":true,"copyright":{"link":"<a href=\"https://vrjure.github.io/2020/03/BlazorWebAssembly-PreRendering/\" title=\"BlazorWebAssembly-PreRendering\">https://vrjure.github.io/2020/03/BlazorWebAssembly-PreRendering/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}